name: Release

on:
  push:
    branches:
      - "buildx"
  release:
    types: [published]


jobs:
  release:
    env:
      POETRY_VERSION: "1.3.2"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/wg-wizard
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=ref,event=branch
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
      - run: |
          echo ${{ steps.meta.outputs.tags }} \
          && echo ${{ steps.meta.outputs.labels }} \
          && echo ${{ github.ref_name }} \
          && echo ${{ github.ref_type }}
      - if: github.ref_type == 'tag'
        run: echo ${{ github.ref_name }}
      - if: github.ref_type != 'tag'
        run: echo ${{ github.sha }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - run: echo "POETRY_HOME=${{ runner.temp }}/.poetry" >> ${GITHUB_ENV}
      - run: echo "${POETRY_HOME}/bin" >> ${GITHUB_PATH}
      - name: Install Poetry
        run: |
          set -x \
          && python -m venv "${POETRY_HOME}" \
          && "${POETRY_HOME}/bin/pip" install -U pip wheel setuptools \
          && "${POETRY_HOME}/bin/pip" install "poetry==${POETRY_VERSION}"
      - run: poetry --version
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     platforms: linux/amd64, linux/arm64, linux/386, linux/arm/v7, linux/arm/v6
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
